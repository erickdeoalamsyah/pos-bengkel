generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  username        String            @unique
  passwordHash    String
  role            Role              @default(CASHIER)
  active          Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  StockAdjustment StockAdjustment[]
  transactions    Transaction[]

  canceledTx Transaction[] @relation("TxCanceledBy")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  slug      String    @unique
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@index([active])
  @@index([slug])
}

model Product {
  id                String            @id @default(uuid())
  sku               String            @unique
  name              String
  price             Int
  cost              Int?
  stock             Int               @default(0)
  unit              String            @default("pcs")
  active            Boolean           @default(true)
  categoryId        String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  lowStockThreshold Int               @default(3)
  category          Category          @relation(fields: [categoryId], references: [id])
  StockAdjustment   StockAdjustment[]
  transactionItems  TransactionItem[]

  @@index([name])
  @@index([active])
  @@index([categoryId])
}

model Transaction {
  id            String            @id @default(uuid())
  code          String            @unique
  datetime      DateTime          @default(now()) @db.Timestamptz(6)
  cashierId     String
  customerName  String?
  vehiclePlate  String?
  mechanicName  String?
  mechanicFee   Int               @default(0)
  subtotal      Int
  total         Int
  cashReceived  Int
  change        Int
  paymentMethod PaymentMethod     @default(CASH)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  mechanicId    String?
  cashier       User              @relation(fields: [cashierId], references: [id])
  mechanic      Mechanic?         @relation(fields: [mechanicId], references: [id])
  items         TransactionItem[]

  canceledAt    DateTime?
  canceledById  String?
  cancelReason  String?
  canceledBy    User?             @relation("TxCanceledBy", fields: [canceledById], references: [id])

  @@index([datetime])
  @@index([cashierId])
  @@index([mechanicId])
  @@index([canceledAt])
}

model TransactionItem {
  id            String      @id @default(uuid())
  transactionId String
  productId     String
  nameSnapshot  String
  price         Int
  qty           Int
  lineTotal     Int
  createdAt     DateTime    @default(now())
  product       Product     @relation(fields: [productId], references: [id])
  transaction   Transaction @relation(fields: [transactionId], references: [id])

  @@index([transactionId])
  @@index([productId])
}

model Mechanic {
  id           String        @id @default(uuid())
  name         String        @unique
  active       Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]

  @@index([active])
}

model StockAdjustment {
  id          String         @id @default(uuid())
  productId   String
  userId      String?
  type        AdjustmentType
  qty         Int
  reason      String?
  note        String?
  beforeStock Int
  afterStock  Int
  createdAt   DateTime       @default(now())
  product     Product        @relation(fields: [productId], references: [id])
  user        User?          @relation(fields: [userId], references: [id])

  @@index([productId])
  @@index([createdAt])
  @@index([type])
}

model ShopSetting {
  id         String   @id @default(uuid())
  name       String   @default("Bengkel Kamu")
  address    String   @default("Alamat belum diatur")
  phone      String   @default("08xx-xxxx-xxxx")
  paperWidth Int      @default(58)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  ADMIN
  CASHIER
}

enum PaymentMethod {
  CASH
}

enum AdjustmentType {
  IN
  OUT
}
